{"ast":null,"code":"import axios from 'axios';\nimport { CATEGORY_LIST_FAIL, CATEGORY_LIST_REQUEST, CATEGORY_LIST_SUCCESS, ORDER_SET_TYPE, PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS } from \"./constants\";\nexport const setOrderType = (dispatch, orderType) => {\n  return dispatch({\n    type: ORDER_SET_TYPE,\n    payload: orderType\n  });\n};\nexport const listCategories = async (dispatch, categoryName = '') => {\n  dispatch({\n    type: PRODUCT_LIST_REQUEST\n  });\n  try {\n    const {\n      data\n    } = await axios.get('/order/categories');\n    dispatch({\n      type: CATEGORY_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: CATEGORY_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\nexport const listProducts = async (dispatch, categoryName = '') => {\n  dispatch({\n    type: PRODUCT_LIST_REQUEST\n  });\n  try {\n    // your backend expects category path, not query param\n    const endpoint = categoryName ? `/order/${categoryName}/menu` : `/order/WHATs_NEW/menu`; // default\n    const {\n      data\n    } = await axios.get(endpoint);\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};","map":{"version":3,"names":["axios","CATEGORY_LIST_FAIL","CATEGORY_LIST_REQUEST","CATEGORY_LIST_SUCCESS","ORDER_SET_TYPE","PRODUCT_LIST_FAIL","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","setOrderType","dispatch","orderType","type","payload","listCategories","categoryName","data","get","error","message","listProducts","endpoint"],"sources":["C:/Users/CLARENCE/OneDrive/Tài liệu/NU/1st Term 2nd yr/DSA/Project Kiosk/KioskApp/frontend/src/actions.js"],"sourcesContent":["import axios from 'axios';\r\nimport { CATEGORY_LIST_FAIL, CATEGORY_LIST_REQUEST, CATEGORY_LIST_SUCCESS, ORDER_SET_TYPE, PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS } from \"./constants\";\r\n\r\nexport const setOrderType = (dispatch, orderType) => {\r\n  return dispatch({\r\n    type: ORDER_SET_TYPE,\r\n    payload: orderType,\r\n  });\r\n};\r\n\r\nexport const listCategories = async (dispatch, categoryName =  '') => {\r\n  dispatch({ type: PRODUCT_LIST_REQUEST });\r\n  try {\r\n    const { data } = await axios.get('/order/categories');\r\n    dispatch({ type: CATEGORY_LIST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: CATEGORY_LIST_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\nexport const listProducts = async (dispatch, categoryName = '') => {\r\n  dispatch({ type: PRODUCT_LIST_REQUEST });\r\n  try {\r\n    // your backend expects category path, not query param\r\n    const endpoint = categoryName \r\n      ? `/order/${categoryName}/menu`\r\n      : `/order/WHATs_NEW/menu`; // default\r\n    const { data } = await axios.get(endpoint);\r\n    dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: PRODUCT_LIST_FAIL, payload: error.message });\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,kBAAkB,EAAEC,qBAAqB,EAAEC,qBAAqB,EAAEC,cAAc,EAAEC,iBAAiB,EAAEC,oBAAoB,EAAEC,oBAAoB,QAAQ,aAAa;AAE7K,OAAO,MAAMC,YAAY,GAAGA,CAACC,QAAQ,EAAEC,SAAS,KAAK;EACnD,OAAOD,QAAQ,CAAC;IACdE,IAAI,EAAEP,cAAc;IACpBQ,OAAO,EAAEF;EACX,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMG,cAAc,GAAG,MAAAA,CAAOJ,QAAQ,EAAEK,YAAY,GAAI,EAAE,KAAK;EACpEL,QAAQ,CAAC;IAAEE,IAAI,EAAEL;EAAqB,CAAC,CAAC;EACxC,IAAI;IACF,MAAM;MAAES;IAAK,CAAC,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAAC,mBAAmB,CAAC;IACrDP,QAAQ,CAAC;MAAEE,IAAI,EAAER,qBAAqB;MAAES,OAAO,EAAEG;IAAK,CAAC,CAAC;EAC1D,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdR,QAAQ,CAAC;MAAEE,IAAI,EAAEV,kBAAkB;MAAEW,OAAO,EAAEK,KAAK,CAACC;IAAQ,CAAC,CAAC;EAChE;AACF,CAAC;AAED,OAAO,MAAMC,YAAY,GAAG,MAAAA,CAAOV,QAAQ,EAAEK,YAAY,GAAG,EAAE,KAAK;EACjEL,QAAQ,CAAC;IAAEE,IAAI,EAAEL;EAAqB,CAAC,CAAC;EACxC,IAAI;IACF;IACA,MAAMc,QAAQ,GAAGN,YAAY,GACzB,UAAUA,YAAY,OAAO,GAC7B,uBAAuB,CAAC,CAAC;IAC7B,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAACI,QAAQ,CAAC;IAC1CX,QAAQ,CAAC;MAAEE,IAAI,EAAEJ,oBAAoB;MAAEK,OAAO,EAAEG;IAAK,CAAC,CAAC;EACzD,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdR,QAAQ,CAAC;MAAEE,IAAI,EAAEN,iBAAiB;MAAEO,OAAO,EAAEK,KAAK,CAACC;IAAQ,CAAC,CAAC;EAC/D;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}