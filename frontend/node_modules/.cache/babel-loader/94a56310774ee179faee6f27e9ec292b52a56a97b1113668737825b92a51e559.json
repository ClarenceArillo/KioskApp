{"ast":null,"code":"import axios from \"axios\";\nimport { CATEGORY_LIST_FAIL, CATEGORY_LIST_REQUEST, CATEGORY_LIST_SUCCESS, ORDER_SET_TYPE, PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS } from \"./constants\";\n\n// ✅ Use single axios instance for all backend requests\nconst axiosInstance = axios.create({\n  baseURL: \"http://localhost:7000/order\"\n});\n\n// ✅ Start Order\nexport const startOrder = async () => {\n  try {\n    const response = await axiosInstance.post(\"/start\");\n    console.log(\"Order started:\", response.data);\n    return response.data;\n  } catch (error) {\n    console.error(\"Failed to start order:\", error.message);\n    throw error;\n  }\n};\n\n// ✅ Set Order Type (DINE_IN / TAKE_OUT)\nexport const setOrderType = (dispatch, orderType) => {\n  return dispatch({\n    type: ORDER_SET_TYPE,\n    payload: orderType\n  });\n};\n\n// ✅ Get Menu Categories\nexport const listCategories = async dispatch => {\n  dispatch({\n    type: CATEGORY_LIST_REQUEST\n  });\n  try {\n    const {\n      data\n    } = await axiosInstance.get(\"/categories\");\n    dispatch({\n      type: CATEGORY_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: CATEGORY_LIST_FAIL,\n      payload: error.message || \"Failed to fetch categories\"\n    });\n  }\n};\n\n// ✅ Get Menu Items per Category\nexport const listProducts = async (dispatch, categoryName = \"WHATs_NEW\") => {\n  dispatch({\n    type: PRODUCT_LIST_REQUEST\n  });\n  try {\n    const {\n      data\n    } = await axiosInstance.get(`/${categoryName}/menu`);\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.message || \"Failed to fetch menu items\"\n    });\n  }\n};","map":{"version":3,"names":["axios","CATEGORY_LIST_FAIL","CATEGORY_LIST_REQUEST","CATEGORY_LIST_SUCCESS","ORDER_SET_TYPE","PRODUCT_LIST_FAIL","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","axiosInstance","create","baseURL","startOrder","response","post","console","log","data","error","message","setOrderType","dispatch","orderType","type","payload","listCategories","get","listProducts","categoryName"],"sources":["C:/Users/CLARENCE/OneDrive/Tài liệu/NU/1st Term 2nd yr/DSA/Project Kiosk/KioskApp/frontend/src/actions.js"],"sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  CATEGORY_LIST_FAIL,\r\n  CATEGORY_LIST_REQUEST,\r\n  CATEGORY_LIST_SUCCESS,\r\n  ORDER_SET_TYPE,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n} from \"./constants\";\r\n\r\n// ✅ Use single axios instance for all backend requests\r\nconst axiosInstance = axios.create({\r\n  baseURL: \"http://localhost:7000/order\",\r\n});\r\n\r\n// ✅ Start Order\r\nexport const startOrder = async () => {\r\n  try {\r\n    const response = await axiosInstance.post(\"/start\");\r\n    console.log(\"Order started:\", response.data);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Failed to start order:\", error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// ✅ Set Order Type (DINE_IN / TAKE_OUT)\r\nexport const setOrderType = (dispatch, orderType) => {\r\n  return dispatch({\r\n    type: ORDER_SET_TYPE,\r\n    payload: orderType,\r\n  });\r\n};\r\n\r\n// ✅ Get Menu Categories\r\nexport const listCategories = async (dispatch) => {\r\n  dispatch({ type: CATEGORY_LIST_REQUEST });\r\n  try {\r\n    const { data } = await axiosInstance.get(\"/categories\");\r\n    dispatch({ type: CATEGORY_LIST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: CATEGORY_LIST_FAIL,\r\n      payload: error.message || \"Failed to fetch categories\",\r\n    });\r\n  }\r\n};\r\n\r\n// ✅ Get Menu Items per Category\r\nexport const listProducts = async (dispatch, categoryName = \"WHATs_NEW\") => {\r\n  dispatch({ type: PRODUCT_LIST_REQUEST });\r\n  try {\r\n    const { data } = await axiosInstance.get(`/${categoryName}/menu`);\r\n    dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_LIST_FAIL,\r\n      payload: error.message || \"Failed to fetch menu items\",\r\n    });\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,kBAAkB,EAClBC,qBAAqB,EACrBC,qBAAqB,EACrBC,cAAc,EACdC,iBAAiB,EACjBC,oBAAoB,EACpBC,oBAAoB,QACf,aAAa;;AAEpB;AACA,MAAMC,aAAa,GAAGR,KAAK,CAACS,MAAM,CAAC;EACjCC,OAAO,EAAE;AACX,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;EACpC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,aAAa,CAACK,IAAI,CAAC,QAAQ,CAAC;IACnDC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEH,QAAQ,CAACI,IAAI,CAAC;IAC5C,OAAOJ,QAAQ,CAACI,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdH,OAAO,CAACG,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAACC,OAAO,CAAC;IACtD,MAAMD,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAME,YAAY,GAAGA,CAACC,QAAQ,EAAEC,SAAS,KAAK;EACnD,OAAOD,QAAQ,CAAC;IACdE,IAAI,EAAElB,cAAc;IACpBmB,OAAO,EAAEF;EACX,CAAC,CAAC;AACJ,CAAC;;AAED;AACA,OAAO,MAAMG,cAAc,GAAG,MAAOJ,QAAQ,IAAK;EAChDA,QAAQ,CAAC;IAAEE,IAAI,EAAEpB;EAAsB,CAAC,CAAC;EACzC,IAAI;IACF,MAAM;MAAEc;IAAK,CAAC,GAAG,MAAMR,aAAa,CAACiB,GAAG,CAAC,aAAa,CAAC;IACvDL,QAAQ,CAAC;MAAEE,IAAI,EAAEnB,qBAAqB;MAAEoB,OAAO,EAAEP;IAAK,CAAC,CAAC;EAC1D,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdG,QAAQ,CAAC;MACPE,IAAI,EAAErB,kBAAkB;MACxBsB,OAAO,EAAEN,KAAK,CAACC,OAAO,IAAI;IAC5B,CAAC,CAAC;EACJ;AACF,CAAC;;AAED;AACA,OAAO,MAAMQ,YAAY,GAAG,MAAAA,CAAON,QAAQ,EAAEO,YAAY,GAAG,WAAW,KAAK;EAC1EP,QAAQ,CAAC;IAAEE,IAAI,EAAEhB;EAAqB,CAAC,CAAC;EACxC,IAAI;IACF,MAAM;MAAEU;IAAK,CAAC,GAAG,MAAMR,aAAa,CAACiB,GAAG,CAAC,IAAIE,YAAY,OAAO,CAAC;IACjEP,QAAQ,CAAC;MAAEE,IAAI,EAAEf,oBAAoB;MAAEgB,OAAO,EAAEP;IAAK,CAAC,CAAC;EACzD,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdG,QAAQ,CAAC;MACPE,IAAI,EAAEjB,iBAAiB;MACvBkB,OAAO,EAAEN,KAAK,CAACC,OAAO,IAAI;IAC5B,CAAC,CAAC;EACJ;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}