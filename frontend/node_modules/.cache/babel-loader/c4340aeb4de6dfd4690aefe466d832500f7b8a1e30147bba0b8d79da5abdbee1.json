{"ast":null,"code":"import axios from 'axios';\nimport { ORDER_SET_TYPE, CATEGORY_LIST_REQUEST, CATEGORY_LIST_FAIL, CATEGORY_LIST_SUCCESS, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL, ORDER_ADD_ITEM, ORDER_REMOVE_ITEM, ORDER_CLEAR, ORDER_SET_PAYMENT_TYPE, ORDER_CREATE_REQUEST, ORDER_CREATE_FAIL, ORDER_CREATE_SUCCESS, ORDER_LIST_REQUEST, ORDER_LIST_FAIL, ORDER_LIST_SUCCESS, SCREEN_SET_WIDTH, ORDER_QUEUE_LIST_REQUEST, ORDER_QUEUE_LIST_SUCCESS, ORDER_QUEUE_LIST_FAIL } from './constants';\n\n// ✅ Use single axios instance for all backend requests\nconst axiosInstance = axios.create({\n  baseURL: \"http://localhost:7000/order\"\n});\n\n// ✅ Start Order\nexport const startOrder = async () => {\n  try {\n    const response = await axiosInstance.post(\"/start\");\n    console.log(\"Order started:\", response.data);\n    return response.data;\n  } catch (error) {\n    console.error(\"Failed to start order:\", error.message);\n    throw error;\n  }\n};\n\n// ✅ Set Order Type (DINE_IN / TAKE_OUT)\nexport const setOrderType = (dispatch, orderType) => {\n  return dispatch({\n    type: ORDER_SET_TYPE,\n    payload: orderType\n  });\n};\nexport const listCategories = async dispatch => {\n  dispatch({\n    type: CATEGORY_LIST_REQUEST\n  });\n  try {\n    const {\n      data\n    } = await axiosInstance.get(\"/categories\");\n    dispatch({\n      type: CATEGORY_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: CATEGORY_LIST_FAIL,\n      payload: error.message || \"Failed to fetch categories\"\n    });\n  }\n};\n\n// ✅ Get Menu Items per Category\nexport const listProducts = async (dispatch, categoryName = \"WHATs_NEW\") => {\n  dispatch({\n    type: PRODUCT_LIST_REQUEST\n  });\n  try {\n    const {\n      data\n    } = await axiosInstance.get(`/${categoryName}/menu`);\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.message || \"Failed to fetch menu items\"\n    });\n  }\n};\nexport const addToOrder = async (dispatch, item) => {\n  return dispatch({\n    type: ORDER_ADD_ITEM,\n    payload: item\n  });\n};\nexport const removeFromOrder = async (dispatch, item) => {\n  return dispatch({\n    type: ORDER_REMOVE_ITEM,\n    payload: item\n  });\n};\nexport const clearOrder = async dispatch => {\n  return dispatch({\n    type: ORDER_CLEAR\n  });\n};\nexport const setPaymentType = async (dispatch, paymentType) => {\n  return dispatch({\n    type: ORDER_SET_PAYMENT_TYPE,\n    payload: paymentType\n  });\n};","map":{"version":3,"names":["axios","ORDER_SET_TYPE","CATEGORY_LIST_REQUEST","CATEGORY_LIST_FAIL","CATEGORY_LIST_SUCCESS","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","ORDER_ADD_ITEM","ORDER_REMOVE_ITEM","ORDER_CLEAR","ORDER_SET_PAYMENT_TYPE","ORDER_CREATE_REQUEST","ORDER_CREATE_FAIL","ORDER_CREATE_SUCCESS","ORDER_LIST_REQUEST","ORDER_LIST_FAIL","ORDER_LIST_SUCCESS","SCREEN_SET_WIDTH","ORDER_QUEUE_LIST_REQUEST","ORDER_QUEUE_LIST_SUCCESS","ORDER_QUEUE_LIST_FAIL","axiosInstance","create","baseURL","startOrder","response","post","console","log","data","error","message","setOrderType","dispatch","orderType","type","payload","listCategories","get","listProducts","categoryName","addToOrder","item","removeFromOrder","clearOrder","setPaymentType","paymentType"],"sources":["C:/Users/CLARENCE/SAMPLE CODES/.vscode/KioskApp/frontend/src/actions.js"],"sourcesContent":["import axios from 'axios';\r\nimport {\r\n  ORDER_SET_TYPE,\r\n  CATEGORY_LIST_REQUEST,\r\n  CATEGORY_LIST_FAIL,\r\n  CATEGORY_LIST_SUCCESS,\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  ORDER_ADD_ITEM,\r\n  ORDER_REMOVE_ITEM,\r\n  ORDER_CLEAR,\r\n  ORDER_SET_PAYMENT_TYPE,\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_LIST_FAIL,\r\n  ORDER_LIST_SUCCESS,\r\n  SCREEN_SET_WIDTH,\r\n  ORDER_QUEUE_LIST_REQUEST,\r\n  ORDER_QUEUE_LIST_SUCCESS,\r\n  ORDER_QUEUE_LIST_FAIL,\r\n} from './constants';\r\n\r\n// ✅ Use single axios instance for all backend requests\r\nconst axiosInstance = axios.create({\r\n  baseURL: \"http://localhost:7000/order\",\r\n});\r\n\r\n// ✅ Start Order\r\nexport const startOrder = async () => {\r\n  try {\r\n    const response = await axiosInstance.post(\"/start\");\r\n    console.log(\"Order started:\", response.data);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Failed to start order:\", error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// ✅ Set Order Type (DINE_IN / TAKE_OUT)\r\nexport const setOrderType = (dispatch, orderType) => {\r\n  return dispatch({\r\n    type: ORDER_SET_TYPE,\r\n    payload: orderType,\r\n  });\r\n};\r\n\r\nexport const listCategories = async (dispatch) => {\r\n  dispatch({ type: CATEGORY_LIST_REQUEST });\r\n  try {\r\n    const { data } = await axiosInstance.get(\"/categories\");\r\n    dispatch({ type: CATEGORY_LIST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: CATEGORY_LIST_FAIL,\r\n      payload: error.message || \"Failed to fetch categories\",\r\n    });\r\n  }\r\n};\r\n\r\n// ✅ Get Menu Items per Category\r\nexport const listProducts = async (dispatch, categoryName = \"WHATs_NEW\") => {\r\n  dispatch({ type: PRODUCT_LIST_REQUEST });\r\n  try {\r\n    const { data } = await axiosInstance.get(`/${categoryName}/menu`);\r\n    dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_LIST_FAIL,\r\n      payload: error.message || \"Failed to fetch menu items\",\r\n    });\r\n  }\r\n};\r\n\r\nexport const addToOrder = async (dispatch, item) => {\r\n  return dispatch({\r\n    type: ORDER_ADD_ITEM,\r\n    payload: item,\r\n  });\r\n};\r\n\r\nexport const removeFromOrder = async (dispatch, item) => {\r\n  return dispatch({\r\n    type: ORDER_REMOVE_ITEM,\r\n    payload: item,\r\n  });\r\n};\r\n\r\nexport const clearOrder = async (dispatch) => {\r\n  return dispatch({\r\n    type: ORDER_CLEAR,\r\n  });\r\n};\r\n\r\nexport const setPaymentType = async (dispatch, paymentType) => {\r\n  return dispatch({\r\n    type: ORDER_SET_PAYMENT_TYPE,\r\n    payload: paymentType,\r\n  });\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}