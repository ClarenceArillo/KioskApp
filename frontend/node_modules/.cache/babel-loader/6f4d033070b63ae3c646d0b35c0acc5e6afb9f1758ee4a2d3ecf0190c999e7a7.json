{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CLARENCE\\\\OneDrive\\\\Ta\\u0300i li\\xEA\\u0323u\\\\NU\\\\1st Term 2nd yr\\\\DSA\\\\Project Kiosk\\\\KioskApp\\\\frontend\\\\src\\\\screens\\\\ChooseScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport Logo from '../components/Logo';\nimport { Box, CardActionArea, CardContent, CardMedia, Fade, Typography } from '@mui/material';\nimport { useStyles } from '../styles';\nimport { setOrderType } from '../actions';\nimport { useNavigate } from 'react-router-dom';\nimport { Store } from '../Store';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChooseScreen() {\n  _s();\n  const styles = useStyles();\n  const {\n    dispatch\n  } = useContext(Store);\n  const navigate = useNavigate();\n  const chooseHandler = async orderType => {\n    try {\n      setOrderType(dispatch, orderType);\n      const formattedType = orderType.toUpperCase().replace(' ', '_');\n      const response = await fetch(`http://localhost:7000/order/type?orderType=${formattedType}`, {\n        method: 'POST'\n      });\n      if (response.ok) {\n        console.log('✅ Order type set successfully:', formattedType);\n        navigate('/order');\n      } else {\n        const errMsg = await response.text();\n        console.error('❌ Failed to set order type:', errMsg);\n        alert('Failed to set order type. Check backend connection.');\n      }\n    } catch (err) {\n      console.error('⚠️ Error connecting to backend:', err);\n      alert('Backend not reachable. Please ensure the Spring Boot server is running on port 7000.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Fade, {\n    in: true,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      className: `${styles.chooseRoot} ${styles.red}`,\n      children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h3\",\n        variant: \"h3\",\n        className: styles.center,\n        gutterBottom: true,\n        children: \"Where will you be eating today?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: styles.cards,\n        children: [/*#__PURE__*/_jsxDEV(CardActionArea, {\n          onClick: () => chooseHandler('Dine in'),\n          children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n            component: \"img\",\n            alt: \"Dine in\",\n            image: \"/images/eatin.png\",\n            className: styles.media\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              gutterBottom: true,\n              variant: \"h4\",\n              color: \"textPrimary\",\n              component: \"p\",\n              children: \"Eat in\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardActionArea, {\n          onClick: () => chooseHandler('Take out'),\n          children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n            component: \"img\",\n            alt: \"Take out\",\n            image: \"/images/takeout.png\",\n            className: styles.media\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              gutterBottom: true,\n              variant: \"h4\",\n              color: \"textPrimary\",\n              component: \"p\",\n              children: \"Take out\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(ChooseScreen, \"iJW9BMrupgFXdqKExbo+0ciYl6I=\", false, function () {\n  return [useStyles, useNavigate];\n});\n_c = ChooseScreen;\nvar _c;\n$RefreshReg$(_c, \"ChooseScreen\");","map":{"version":3,"names":["React","useContext","Logo","Box","CardActionArea","CardContent","CardMedia","Fade","Typography","useStyles","setOrderType","useNavigate","Store","jsxDEV","_jsxDEV","ChooseScreen","_s","styles","dispatch","navigate","chooseHandler","orderType","formattedType","toUpperCase","replace","response","fetch","method","ok","console","log","errMsg","text","error","alert","err","in","children","className","chooseRoot","red","fileName","_jsxFileName","lineNumber","columnNumber","component","variant","center","gutterBottom","cards","onClick","alt","image","media","color","_c","$RefreshReg$"],"sources":["C:/Users/CLARENCE/OneDrive/Tài liệu/NU/1st Term 2nd yr/DSA/Project Kiosk/KioskApp/frontend/src/screens/ChooseScreen.js"],"sourcesContent":["import React, { useContext } from 'react';\r\nimport Logo from '../components/Logo';\r\nimport { Box, CardActionArea, CardContent, CardMedia, Fade, Typography } from '@mui/material';\r\nimport { useStyles } from '../styles';\r\nimport { setOrderType } from '../actions';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Store } from '../Store';\r\n\r\nexport default function ChooseScreen() {\r\n  const styles = useStyles();\r\n  const { dispatch } = useContext(Store);\r\n  const navigate = useNavigate();\r\n\r\n  const chooseHandler = async (orderType) => {\r\n    try {\r\n      \r\n      setOrderType(dispatch, orderType);\r\n\r\n      const formattedType = orderType.toUpperCase().replace(' ', '_'); \r\n      const response = await fetch(\r\n        `http://localhost:7000/order/type?orderType=${formattedType}`,\r\n        { method: 'POST' }\r\n      );\r\n\r\n      if (response.ok) {\r\n        console.log('✅ Order type set successfully:', formattedType);\r\n        navigate('/order'); \r\n      } else {\r\n        const errMsg = await response.text();\r\n        console.error('❌ Failed to set order type:', errMsg);\r\n        alert('Failed to set order type. Check backend connection.');\r\n      }\r\n    } catch (err) {\r\n      console.error('⚠️ Error connecting to backend:', err);\r\n      alert('Backend not reachable. Please ensure the Spring Boot server is running on port 7000.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fade in={true}>\r\n      <Box className={`${styles.chooseRoot} ${styles.red}`}>\r\n        <Logo />\r\n        <Typography component=\"h3\" variant=\"h3\" className={styles.center} gutterBottom>\r\n          Where will you be eating today?\r\n        </Typography>\r\n\r\n        <Box className={styles.cards}>\r\n          <CardActionArea onClick={() => chooseHandler('Dine in')}>\r\n            <CardMedia\r\n              component=\"img\"\r\n              alt=\"Dine in\"\r\n              image=\"/images/eatin.png\"\r\n              className={styles.media}\r\n            />\r\n            <CardContent>\r\n              <Typography gutterBottom variant=\"h4\" color=\"textPrimary\" component=\"p\">\r\n                Eat in\r\n              </Typography>\r\n            </CardContent>\r\n          </CardActionArea>\r\n\r\n          <CardActionArea onClick={() => chooseHandler('Take out')}>\r\n            <CardMedia\r\n              component=\"img\"\r\n              alt=\"Take out\"\r\n              image=\"/images/takeout.png\"\r\n              className={styles.media}\r\n            />\r\n            <CardContent>\r\n              <Typography gutterBottom variant=\"h4\" color=\"textPrimary\" component=\"p\">\r\n                Take out\r\n              </Typography>\r\n            </CardContent>\r\n          </CardActionArea>\r\n        </Box>\r\n      </Box>\r\n    </Fade>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}